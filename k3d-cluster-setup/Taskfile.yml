version: '3'

dotenv: ['.env']

tasks:
  setup:
    cmds:
      - task: install_k3d
      - task: create_cluster
      - task: verify_cluster
      - task: switch_context
      - task: print_setup_complete
      - task: install_kubectl
      - task: install_argocd

  install_k3d:
    cmds:
      - wget -q -O - https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | bash
    desc: Install k3d

  create_cluster:
    cmds:
      - unset KUBECONFIG; k3d cluster create -i rancher/k3s:v1.30.0-rc1-k3s1 -s 3 -p "443:443@loadbalancer" -p "80:80@loadbalancer" -p "8443:8443@loadbalancer" -p "8000:8000@loadbalancer" ch10-crossplane-rk
    desc: Create Kubernetes cluster with k3d

  verify_cluster:
    cmds:
      - echo "Verifying k3d cluster status..."
      - until k3d cluster list | grep -q '3/3'; do
          k3d cluster list;
          sleep 3;
        done
      - echo "Cluster is up and running:"
      - k3d cluster list
      - echo "Press any key to continue..."
      - read
    desc: Verify k3d cluster is running

  switch_context:
    cmds:
      - kubectl config use-context k3d-ch10-crossplane-rk
    desc: Switch context to k3d-ch10-crossplane-rk

  print_setup_complete:
    cmds:
      - echo "Local Kubernetes server is set up. Author - Georgi Lazarov."
    desc: Print setup completion message

  install_kubectl:
    cmds:
      - curl -LO https://dl.k8s.io/release/v1.33.0/bin/linux/arm64/kubectl
      - install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
      - chmod +x kubectl
      - mkdir -p ~/.local/bin
      - mv ./kubectl ~/.local/bin/kubectl
      - kubectl version --client --output=yaml

  install_argocd:
    cmds:
      - helm repo add argo https://argoproj.github.io/argo-helm
      - helm install argocd argo/argo-cd --namespace argocd --create-namespace
      - kubectl apply -f argo-ingress.yaml
      - kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d
      - kubectl -n argocd patch deployment argocd-server --type='json' -p='[{"op":"add","path":"/spec/template/spec/containers/0/args/-","value":"--insecure"}]'
      - echo "You may access ArgoCD via https://argocd.localhost:8085"
    desc: Install ArgoCD via Helm
